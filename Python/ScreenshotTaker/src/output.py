# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\save.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pyautogui 
import numpy as np 
from cv2 import cv2 
from PIL.ImageQt import ImageQt


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Screen Shot Taker")
        MainWindow.resize(653, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.image_label = QtWidgets.QLabel(self.centralwidget)
        self.image_label.setGeometry(QtCore.QRect(20, 120, 621, 341))
        self.image_label.setText("")
        self.image_label.setObjectName("image_label")
        self.header_info = QtWidgets.QTextBrowser(self.centralwidget)
        self.header_info.setGeometry(QtCore.QRect(200, 10, 281, 41))
        self.header_info.setObjectName("header_info")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(260, 70, 171, 41))
        self.pushButton.setObjectName("pushButton")
        self.directory_sive = QtWidgets.QLabel(self.centralwidget)
        self.directory_sive.setGeometry(QtCore.QRect(20, 490, 451, 21))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.directory_sive.setFont(font)
        self.directory_sive.setText("")
        self.directory_sive.setScaledContents(False)
        self.directory_sive.setObjectName("directory_sive")
        self.directory_btn = QtWidgets.QPushButton(self.centralwidget)
        self.directory_btn.setGeometry(QtCore.QRect(500, 490, 131, 31))
        self.directory_btn.setObjectName("directory_btn")
        self.save_btn = QtWidgets.QPushButton(self.centralwidget)
        self.save_btn.setGeometry(QtCore.QRect(300, 520, 91, 31))
        self.save_btn.setObjectName("save_btn")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 653, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("Screen Shot Taker", "Screen Shot Taker"))
        self.header_info.setHtml(_translate("Screen Shot Taker", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; font-weight:600; text-decoration: underline;\">ScreenShot Taker</span></p></body></html>"))
        self.pushButton.setText(_translate("Screen Shot Taker", "Take Screenshot Now"))
        self.directory_btn.setText(_translate("Screen Shot Taker", "Select Output Directory"))
        self.save_btn.setText(_translate("Screen Shot Taker", "SAVE"))

        self.pushButton.clicked.connect(self.take_shot)
        self.directory_btn.clicked.connect(self.select_dir)
        self.dir_name=""
        self.image = ""

    def select_dir(self):
        self.dialog = QtWidgets.QFileDialog()
        self.folder_path = self.dialog.getExistingDirectory(None, "Select Folder")
        self.dir_name = self.folder_path
        print(self.dir_name)

    def take_shot(self):
        # take screenshot using pyautogui 
        self.image_label.clear()
        self.image_shot_init = pyautogui.screenshot() 
        # self.image_shot = ImageQt(self.image_shot_init)

        # since the pyautogui takes as a 
        # PIL(pillow) and in RGB we need to 
        # convert it to numpy array and BGR 
        # so we can write it to the disk 
        self.cv2_image = cv2.cvtColor(np.array(self.image_shot_init),cv2.COLOR_RGB2BGR) 
        cv2.imshow("Image", self.cv2_image) 
        print(self.cv2_image.shape,self.cv2_image.data)
        self.cv2_image = QtGui.QImage(self.cv2_image.data, self.cv2_image.shape[1], self.cv2_image.shape[0], QtGui.QImage.Format_RGB888)
        # self.cv2_image = QtGui.QImage(self.cv2_image)
        self.image_label.setPixmap(QtGui.QPixmap(self.cv2_image))
        # self.image_label.show()
        self.image_label.adjustSize()

        



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
